`-FunctionDecl <Main.cpp:3:1, line:14:1> line:3:5 main 'int (int, char **)'
  |-ParmVarDecl  <col:10, col:14> col:14 used argc 'int'
  |-ParmVarDecl  <col:20, col:27> col:27 used argv 'char **'
  `-CompoundStmt  <col:33, line:14:1>
    |-DeclStmt  <line:4:3, col:12>
    | `-VarDecl  <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral  <col:11> 'int' 1
    |-DeclStmt   <line:5:3, col:14>
    | `-VarDecl   <col:3, col:13> col:7 used max 'int' cinit
    |   `-IntegerLiteral 0x20a4508df20 <col:13> 'int' 0
    |-WhileStmt  <line:6:3, line:12:3>
    | |-BinaryOperator   <line:6:10, col:14> 'bool' '<'
    | | |-ImplicitCastExpr  <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr   <col:10> 'int' lvalue Var   'i' 'int'
    | | `-ImplicitCastExpr   <col:14> 'int' <LValueToRValue>
    | |   `-DeclRefExpr   <col:14> 'int' lvalue ParmVar 0x20a4508dbd8 'argc' 'int'
    | `-CompoundStmt  <col:20, line:12:3>
    |   |-DeclStmt   <line:7:5, col:28>
    |   | `-VarDecl   <col:5, col:27> col:9 used aux 'int' cinit
    |   |   `-CallExpr  <col:15, col:27> 'int'
    |   |     |-ImplicitCastExpr   <col:15> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0  <col:15> 'int (const char *) __attribute__((cdecl))':'int (const char *)' lvalue Function  'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
    |   |     `-ImplicitCastExpr  <col:20, col:26> 'const char *' <NoOp>
    |   |       `-ImplicitCastExpr  <col:20, col:26> 'char *' <LValueToRValue>
    |   |         `-ArraySubscriptExpr  <col:20, col:26> 'char *' lvalue
    |   |           |-ImplicitCastExpr  <col:20> 'char **' <LValueToRValue>
    |   |           | `-DeclRefExpr  <col:20> 'char **' lvalue ParmVar  'argv' 'char **'
    |   |           `-ImplicitCastExpr  <col:25> 'int' <LValueToRValue>
    |   |             `-DeclRefExpr   <col:25> 'int' lvalue Var  'i' 'int'
    |   |-UnaryOperator   <line:8:5, col:6> 'int' postfix '++'
    |   | `-DeclRefExpr   <col:5> 'int' lvalue Var 'i' 'int'
    |   `-IfStmt  <line:9:5, line:11:5>
    |     |-BinaryOperator <line:9:9, col:15> 'bool' '>'
    |     | |-ImplicitCastExpr  <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr   <col:9> 'int' lvalue Var 'aux' 'int'
    |     | `-ImplicitCastExpr   <col:15> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr  <col:15> 'int' lvalue Var  'max' 'int'
    |     `-CompoundStmt <col:20, line:11:5>
    |       `-BinaryOperator <line:10:7, col:13> 'int' lvalue '='
    |         |-DeclRefExpr  <col:7> 'int' lvalue Var 'max' 'int'
    |         `-ImplicitCastExpr  <col:13> 'int' <LValueToRValue>
    |           `-DeclRefExpr <col:13> 'int' lvalue Var  'aux' 'int'
    `-CallExpr <line:13:3, col:27> 'int'
      |-ImplicitCastExpr <col:3> 'int (*)(const char *const, ...) __attribute__((cdecl))' <FunctionToPointerDecay>
      | `-DeclRefExpr  <col:3> 'int (const char *const, ...) __attribute__((cdecl))':'int (const char *const, ...)' lvalue Function 'printf' 'int (const char *const, ...) __attribute__((cdecl))':'int (const char *const, ...)'
      |-ImplicitCastExpr  <col:10> 'const char *' <ArrayToPointerDecay>
      | `-StringLiteral  <col:10> 'const char [10]' lvalue "Max = %d\n"
      `-ImplicitCastExpr  <col:24> 'int' <LValueToRValue>
        `-DeclRefExpr <col:24> 'int' lvalue Var 'max' 'int'